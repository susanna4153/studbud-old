{"mappings":"AACA,MAAMA,KAAOC,SAASC,eAAe,YAC/BC,OAASF,SAASG,cAAc,sBAChCC,SAAWJ,SAASC,eAAe,YACnCI,UAAYL,SAASC,eAAe,aAI1CC,OAAOI,iBAAiB,SAAS,SAASC,GACxCA,EAAMC,iBAQNC,QANWV,KAAKW,SAASC,KAAKC,OAGlB,IAAIC,MAAQC,mBAAmB,SAGvB,aAAc,MAAO,CAAC,IAAK,OAAO,GAGtDC,QAAQC,IAAIC,aAId,IAAIA,SAAW,GAEf,SAASR,QAAQS,EAAiBC,EAAaC,EAASC,EAAgBC,EAAeC,GACrF,IAAIZ,EAAO,CACTO,gBAAAA,EACAC,YAAAA,EACAC,QAAAA,EACAC,eAAAA,EACAC,cAAAA,EACAC,iBAAAA,GAIFN,SAASO,KAAKb,GAGdc,WAAWd,GAKb,SAASc,WAAWd,GAClB,IAAIe,EAAO1B,SAAS2B,cAAc,MAClCD,EAAKE,UAAY,MAAQjB,EAAKO,gBAAkB,OAEhDd,SAASyB,YAAYH,GAGrB,IAAII,EAAY9B,SAAS2B,cAAc,UACnCI,EAAgB/B,SAASgC,eAAe,UAC5CF,EAAUD,YAAYE,GACtBL,EAAKG,YAAYC,GAGjBA,EAAUxB,iBAAiB,SAAS,SAASC,GAC3CmB,EAAKO,YAKPlC,KAAKmC","sources":["public/script.js"],"sourcesContent":["// Setting up variables for our HTML elements using DOM selection\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\"); // Complex CSS query\nconst tasklist = document.getElementById(\"tasklist\");\nconst taskInput = document.getElementById(\"taskInput\");\n\n// Event listener for Button click\n// This could also be form.addEventListener(\"submit\", function() {...} )\nbutton.addEventListener(\"click\", function(event) {\n  event.preventDefault(); // Not as necessary for button, but needed for form submit\n\n  let task = form.elements.task.value; // could be swapped out for line below\n  //let task = taskInput.value;\n\n  let date = (new Date()).toLocaleDateString('en-US') //Convert to short date format\n\n  // Call the addTask() function using\n  addTask(task, date, \"26/03/2021\", \"Low\", [\"1\", \"30\"], false);\n\n  // Log out the newly populated taskList everytime the button has been pressed\n  console.log(taskList);\n})\n\n// Create an empty array to store our tasks\nvar taskList = [];\n\nfunction addTask(taskDescription, createdDate, dueDate, priorityRating, estimatedTime, completionStatus) {\n  let task = {\n    taskDescription,\n    createdDate,\n    dueDate,\n    priorityRating,\n    estimatedTime,\n    completionStatus\n  };\n\n  // Add the task to our array of tasks\n  taskList.push(task);\n\n  // Separate the DOM manipulation from the object creation logic\n  renderTask(task);\n}\n\n\n// Function to display the item on the page\nfunction renderTask(task) {\n  let item = document.createElement(\"li\");\n  item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n  tasklist.appendChild(item);\n\n  // Setup delete button DOM elements\n  let delButton = document.createElement(\"button\");\n  let delButtonText = document.createTextNode(\"Delete\");\n  delButton.appendChild(delButtonText);\n  item.appendChild(delButton); // Adds a delete button to every task\n\n  // Listen for when the \n  delButton.addEventListener(\"click\", function(event){\n    item.remove(); // Remove the task item from the page when button clicked\n    // Because we used 'let' to define the item, this will always delete the right element\n  })\n  \n  // Clear the value of the input once the task has been added to the page\n  form.reset();\n}"],"names":["form","document","getElementById","button","querySelector","tasklist","taskInput","addEventListener","event","preventDefault","addTask","elements","task","value","Date","toLocaleDateString","console","log","taskList","taskDescription","createdDate","dueDate","priorityRating","estimatedTime","completionStatus","push","renderTask","item","createElement","innerHTML","appendChild","delButton","delButtonText","createTextNode","remove","reset"],"version":3,"file":"index.0ddee74a.js.map"}